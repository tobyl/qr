{"version":3,"sources":["icons.js","CoverageItem.js","BooleanCoverageItem.js","ChartCoverageItem.js","DepreciationWaiverItem.js","AccidentWaiverItem.js","RadioGroup.js","utils.js","CoverageList.js","LoadingButton.js","StickyHeader.js","App.js","serviceWorker.js","index.js"],"names":["Warning","tier","className","viewBox","xmlns","d","fill","Shield","Stop","Logo","CoverageItem","children","title","name","Highest","Mid","Lowest","useState","modifyVisible","setModifyVisible","values","useContext","AppContext","val","isHighest","Number","isMid","isLowest","cls","classNames","console","log","onClick","BooleanCoverageItem","ChartCoverageItem","choices","set","onChange","e","target","value","map","ch","i","key","htmlFor","id","type","checked","VehicleCoverageItem","vehicles","Modifying","v","depreciation_waiver","filter","length","AccidentWaiverItem","accident_waiver","RadioGroup","kind","index","str","item","formatValue","numeral","format","CoverageList","DepreciationWaiverItem","LoadingButton","label","setPricesChanged","loading","setLoading","setTimeout","StickyHeader","pricesChanged","React","createContext","App","liability_limit","comprehensive_coverage","collision_coverage","transportation_replacement","non_owned_autos","medical_rehab_non","death_funeral","setValues","Provider","prevState","current","Object","assign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36157592.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Star = ({ tier }) => {\n  return (\n    <svg className=\"Star\" viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M426.776 426.775l-95.456 19.549L250 500l-81.32-53.675-95.457-19.548-19.548-95.455L0 250.001l53.675-81.32 19.549-95.456 95.456-19.549L250 0l81.32 53.675 95.457 19.548 19.548 95.457L500 249.999l-53.675 81.32z\" className=\"bg\" /><path d=\"M370.758 218.48l-135.36 135.35c-10.023 10.025-26.283 10.025-36.316 0L129.21 283.95c-10.027-10.025-10.027-26.286 0-36.314 10.03-10.029 26.288-10.029 36.313-.003l51.724 51.724L334.44 182.165c10.029-10.03 26.288-10.022 36.314 0 10.025 10.027 10.025 26.283.004 36.316z\" className=\"fg\" /></svg>\n  )\n}\n\nexport const Warning = ({ tier }) => {\n  return (\n    <svg className=\"Warning\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\"><path className=\"bg\" d=\"M25.4 187.045c-6.84 0-12.702-3.401-16.082-9.335-3.389-5.943-3.317-12.799.186-18.82l.093-.15 74.4-136.642c.096-.165.189-.33.279-.495 3.496-5.427 9.325-8.648 15.71-8.648 6.483 0 12.396 3.326 15.872 8.909l74.63 137.131.093.162c3.37 5.766 3.392 12.7.057 18.553-3.38 5.934-9.245 9.335-16.085 9.335zm0 0\" fill=\"#8c8c8c\"/><path className=\"fg\" d=\"M25.4 194.549c-8.722-.508-17.844-5.802-22.601-13.123-3.881-7.84-3.683-18.622.327-26.489l-.12.216L77.51 18.325c.072-.12.393-.666.456-.786C82.805 10.86 91.786 5.45 99.986 5.45c8.323 0 17.64 5.955 22.463 12.826l74.589 137.056.02.036c3.885 7.648 3.927 18.334.1 26.054-4.758 7.324-13.883 12.618-22.605 13.126zm149.153-15.008c4.959.507 7.564-1 9.566-5.544 2.842-3.986 2.842-7.168-.015-11.052l-.123-.213-74.715-137.281c-2.128-4.296-4.637-4.992-9.28-4.992-4.569 0-7.246 1.033-9.401 5.208-.117.21.066-.087-.042.099L16.189 162.327l-.306.516c-2.996 4.175-2.942 7.105-.046 11.151 2.003 4.544 4.605 6.054 9.563 5.547z\" fill=\"#bada55\"/></svg>\n  )\n}\n\nexport const Shield = ({ tier }) => {\n  return (\n    <svg className=\"Shield\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\"><path className=\"bg\" d=\"M174.439 39.235c-30.842 0-54.465-8.805-74.444-28.232C80.026 30.43 56.403 39.235 25.571 39.235c0 50.59-10.471 123.056 74.424 152.482 84.905-29.436 74.444-101.892 74.444-152.482z\" /><path className=\"fg\" d=\"M97.445 199.076c-44.315-16.103-65.63-44.124-73.992-73.54C15.08 96.1 17.79 64.204 17.78 39.235l-.01-7.851 7.801.06c29.466.251 50.379-7.46 68.993-26.023L99.995 0l5.431 5.421c18.624 18.564 39.537 26.274 69.013 26.023l7.79-.06-.01 7.851c-.01 24.969 2.701 56.865-5.672 86.3-8.363 29.417-29.677 57.438-74.002 73.541l-2.55.924zm64.123-77.797c7.61-26.796 5.532-50.69 5.15-74.474-28.06-1.446-46.373-8.343-66.693-25.35-19.698 16.756-38.02 23.653-66.733 25.32-.342 23.784-2.47 47.708 5.15 74.504 7.62 26.816 22.85 48.773 61.553 62.216 38.703-13.453 53.943-35.4 61.573-62.216z\" fill=\"#bada55\"/></svg>\n  )\n}\n\nexport const Stop = ({ tier }) => {\n  return (\n    <svg className=\"Stop\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\"><path className=\"fg\" d=\"M138.34 17.002c6.39 0 11.177 2.767 14.368 8.3l38.338 66.402c3.2 5.534 3.2 11.058 0 16.6l-38.338 66.403c-3.19 5.524-7.977 8.29-14.368 8.29H61.664c-6.391 0-11.178-2.766-14.378-8.29L8.948 108.305c-3.19-5.543-3.19-11.067 0-16.6l38.338-66.403c3.2-5.533 7.987-8.3 14.378-8.3z\" /><path className=\"bg\" d=\"M138.34 9.846c8.17.48 16.065 5.035 20.566 11.878l38.338 66.402c3.68 7.323 3.67 16.425 0 23.757l-38.338 66.393c-4.5 6.843-12.395 11.399-20.566 11.878H61.664c-8.18-.48-16.066-5.035-20.566-11.878L2.76 111.883c-3.68-7.332-3.68-16.434 0-23.757l38.338-66.402c4.5-6.843 12.386-11.399 20.566-11.878zM61.664 24.159c-4.602-.48-6.299.489-8.18 4.713l-38.338 66.41c-2.712 3.745-2.72 5.7 0 9.444l38.338 66.402c1.89 4.224 3.578 5.202 8.18 4.722h76.676c4.602.48 6.29-.498 8.17-4.722l38.339-66.402c2.72-3.744 2.72-5.699 0-9.443L146.51 28.88c-1.882-4.224-3.57-5.202-8.171-4.722z\" fill=\"#bada55\"/></svg>\n  )\n}\n\nexport const Logo = () => {\n  return (\n    <svg className=\"Logo\" viewBox=\"0 0 123.5 56\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#005daa\" d=\"M0 11.3h7.9V42H0zm28.8 0v15.9l-2.1-3c-1.2-1.7-2.3-3.3-3.5-4.8-1.2-1.5-2.3-3-3.5-4.4-1.1-1.4-2.2-2.5-3.1-3.5l-.2-.2h-6.3V42h7.8V23.9c2 2.5 4 5.1 5.8 7.8 2.2 3.3 4.2 6.6 6.1 9.9l.2.3h6.6V11.3h-7.8zm25.3 24.2c-1.2 0-2.2-.2-3-.6-.9-.4-1.6-1-2.2-1.7-.6-.8-1.1-1.7-1.4-2.8-.3-1.1-.5-2.3-.5-3.7 0-1.4.2-2.6.5-3.7s.8-2 1.4-2.8c.6-.8 1.3-1.3 2.2-1.8.9-.4 1.9-.6 3-.6s2.1.2 3 .6c.9.4 1.6 1 2.2 1.7.6.8 1.1 1.7 1.4 2.8.3 1.1.5 2.3.5 3.7 0 1.4-.2 2.6-.5 3.7s-.8 2-1.4 2.8c-.6.8-1.3 1.3-2.2 1.7-.9.4-1.9.7-3 .7m15.2-8.9c0-2.6-.4-4.9-1.2-6.9-.8-2-1.9-3.7-3.3-5-1.4-1.4-3-2.4-4.9-3.1-1.9-.7-3.8-1-5.9-1-2 0-4 .3-5.8 1-1.8.7-3.5 1.7-4.9 3.1-1.4 1.4-2.5 3.1-3.4 5-.8 2-1.2 4.3-1.2 6.9 0 2.6.4 4.9 1.2 6.9.8 2 1.9 3.7 3.3 5 1.4 1.3 3 2.4 4.9 3 1.9.7 3.8 1 5.9 1 2.1 0 4.1-.3 6-1 1.9-.7 3.5-1.7 4.9-3.1 1.4-1.4 2.4-3 3.2-5 .9-1.9 1.2-4.2 1.2-6.8zm21.3-15.3l-.1.5c-.6 1.7-1.2 3.5-1.8 5.5-.7 2-1.4 3.9-2.1 5.9-.7 1.9-1.4 3.8-2 5.6-.4 1.2-.8 2.2-1.2 3.2-.4-.9-.8-2-1.2-3.2-.6-1.8-1.3-3.6-2-5.6-.7-1.9-1.4-3.9-2.1-5.9-.7-2-1.3-3.8-1.8-5.5l-.1-.5h-8.7l.3.9c.6 1.9 1.4 4 2.2 6.4.9 2.4 1.8 4.9 2.8 7.5 1 2.6 2.1 5.2 3.2 7.9s2.3 5.2 3.5 7.7l.2.4h7.1l.2-.4c1.2-2.5 2.3-5 3.5-7.7 1.1-2.7 2.2-5.3 3.2-7.9 1-2.6 2-5.1 2.8-7.5.9-2.4 1.6-4.5 2.3-6.4l.3-.9h-8.5zm14.9 9.3c0-.1 0-.1.1-.2 0 0 0 .1.1.1.3.7.6 1.6 1 2.5.4 1 .8 2 1.2 3.2.3.9.7 1.8 1 2.8h-6.5c.4-.9.7-1.9 1-2.7.4-1.2.9-2.2 1.2-3.2.3-.9.7-1.8.9-2.5m15.7 20.5c-1.1-3.2-2.2-6.1-3.2-8.8-1-2.7-2-5.2-2.9-7.6-1-2.4-1.9-4.6-2.8-6.8-.9-2.1-1.9-4.2-2.9-6.3l-.2-.4h-7.1l-.2.4c-1 2-2 4.1-2.9 6.3-.9 2.1-1.9 4.4-2.8 6.8-1 2.4-1.9 4.9-2.9 7.6-1 2.7-2 5.6-3.1 8.8l-.3.9h8.3l.1-.5c.3-1 .7-2 1-3.1.3-.9.6-1.9 1-2.8h10.5c.3.9.6 1.8 1 2.8.4 1.1.7 2.1 1 3.1l.1.5h8.5l-.2-.9z\" /><path d=\"M101.4 9c.7-1.9 1.4-3.9 2.1-5.9.4-1.1.7-2.1 1-3.1-.7.5-1.5 1-2.3 1.6-1.4 1.1-2.9 2.2-4.4 3.4-1.5 1.2-3 2.5-4.6 3.8-.9.8-1.9 1.6-2.7 2.4l-.1.5c-.6 1.7-1.2 3.5-1.8 5.5-.7 2-1.4 3.9-2.1 5.9-.3.8-.5 1.5-.8 2.2v.1s5.2-5.8 8.1-8.4c2.2-2 4.5-3.9 6.8-5.7v-.1c.3-.7.5-1.4.8-2.2\" fill=\"#e71939\" /><path d=\"M116.5 14.8c0 1.9 1.6 3.5 3.5 3.5s3.5-1.6 3.5-3.5-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5m.5 0c0-1.6 1.3-2.9 2.9-2.9 1.6 0 2.9 1.3 2.9 2.9 0 1.6-1.3 2.9-2.9 2.9-1.5 0-2.9-1.3-2.9-2.9\" fill=\"#005daa\" /><path d=\"M119.2 15.4v1.3h-.7v-3.8h1.9c.8 0 1.2.3 1.2 1.1 0 .6 0 1-.7 1.1.5 0 .6.3.6.9v.7h-.7V16c0-.3-.1-.5-.5-.5h-1.1zm1-.6c.5 0 .7-.1.7-.7 0-.5-.1-.6-.6-.6h-1v1.3h.9z\" fill=\"#005daa\" /></svg>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport classNames from 'classnames'\nimport { AppContext } from './App'\nimport { Shield, Warning, Stop } from './icons'\n\nconst CoverageItem = ({ children, title, name, Highest = null, Mid = null, Lowest = null }) => {\n\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const { values } = useContext(AppContext)\n\n  const val = values[name]\n\n  const isHighest = Number(val) === Number(Highest)\n  const isMid = Number(val) === Number(Mid)\n  const isLowest = Number(val) === Number(Lowest)\n\n  const cls = classNames('CoverageItem', {\n    'Modifying': modifyVisible,\n    'Highest': isHighest,\n    'Lowest': isLowest,\n    'Mid': isMid,\n  })\n\n  if (name === 'medical_rehab_non') {\n    console.log(values[name], Highest, Mid, Lowest)\n  }\n\n  return (\n    <div className={cls} onClick={() => setModifyVisible(!modifyVisible)}>\n      <div>\n        <div>\n          {isHighest && <Shield />}\n          {isMid && <Warning />}\n          {isLowest && <Stop />}\n          <h4>{title}</h4>\n        </div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default CoverageItem\n","import React, { useState, useContext } from 'react'\nimport classNames from 'classnames'\nimport { AppContext } from './App'\nimport { Shield, Warning } from './icons'\n\nconst BooleanCoverageItem = ({ children, title, name, Highest = 'false', Lowest = 'false' }) => {\n\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const { values } = useContext(AppContext)\n\n  const val = values[name]\n\n  const isHighest = val === Highest\n  const isLowest = val === Lowest\n\n  const cls = classNames('CoverageItem BooleanCoverageItem', {\n    'Modifying': modifyVisible,\n    'Highest': isHighest,\n    'Mid': isLowest,\n  })\n\n  return (\n    <div className={cls} onClick={() => setModifyVisible(!modifyVisible)}>\n      <div>\n        <div>\n          {isHighest && <Shield />}\n          {isLowest && <Warning />}\n          <h4>{title}</h4>\n        </div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default BooleanCoverageItem\n","import React, { useState, useContext } from 'react'\nimport classNames from 'classnames'\nimport { AppContext } from './App'\nimport { Shield, Warning } from './icons'\n\nconst ChartCoverageItem = ({ children, title, name, Highest = 'increased', Lowest = 'standard', choices = [] }) => {\n\n  const [modifyVisible, setModifyVisible] = useState(true)\n\n  const { values, set } = useContext(AppContext)\n\n  const val = values[name]\n\n  const isHighest = val === Highest\n  const isLowest = val === Lowest\n\n  const onChange = (e) => {\n    const val = e.target.value\n    set(name, val)\n  }\n\n  const cls = classNames('CoverageItem ChartCoverageItem', {\n    'Modifying': modifyVisible,\n    'Highest': isHighest,\n    'Mid': isLowest,\n  })\n\n  return (\n    <div className={cls}>\n      <div>\n        <div>\n          {isHighest && <Shield />}\n          {isLowest && <Warning />}\n          <h4>{title}</h4>\n        </div>\n        <div className=\"Modify\">\n          <table>\n            <thead>\n              <tr>\n                <th className=\"text-left\">Coverage</th>\n                {choices.map((ch, i) => (\n                  <th key={name + i}>\n                    <label htmlFor={name + i}>\n                      <span>{ch[1]}</span>\n                      <input\n                        id={name + i}\n                        name={name}\n                        type=\"radio\"\n                        onChange={onChange}\n                        value={ch[0]}\n                        checked={values[name] === ch[0]}\n                      />\n                    </label>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  Lump sum for a<br />\n                  spouse\n                </td>\n                <td className=\"text-center Standard\">\n                  <strong>$25,000</strong>\n                </td>\n                <td className=\"text-center Increased\">\n                  <strong>$50,000</strong>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Lump sum for each\n                  <br />\n                  dependent\n                </td>\n                <td className=\"text-center Standard\">\n                  <strong>$10,000</strong>\n                </td>\n                <td className=\"text-center Increased\">\n                  <strong>$20,000</strong>\n                </td>\n              </tr>\n              <tr>\n                <td>Funeral expenses</td>\n                <td className=\"text-center Standard\">\n                  <small>Up to</small>\n                  <strong>$6,000</strong>\n                </td>\n                <td className=\"text-center Increased\">\n                  <small>Up to</small>\n                  <strong>$8,000</strong>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ChartCoverageItem\n","import React, { useState, useContext } from 'react'\nimport classNames from 'classnames'\nimport { AppContext } from './App'\nimport { Shield, Warning } from './icons'\n\nconst VehicleCoverageItem = ({ children, title, name }) => {\n\n  const [modifyVisible, setModifyVisible] = useState(false)\n\nconst { vehicles } = useContext(AppContext)\n\n  const cls = classNames('CoverageItem VehicleCoverageItem', {\n    Modifying: modifyVisible,\n  })\n\n  const icon = vehicle => {\n    if (vehicle.depreciation_waiver) {\n      return <span><Shield /></span>\n    } else {\n      return <span className=\"NotApplicable\">N/A</span>\n    }\n  }\n\n  const anyFalse = () => {\n    const any = vehicles.filter(v => !v.depreciation_waiver)\n    if (any.length > 0) {\n      return <small className=\"CoverageLevel\">Depreciation waivers are only available on new vehicles.</small>\n    }\n    return null\n  }\n\n  return (\n    <div className={cls}>\n      <div onClick={() => setModifyVisible(!modifyVisible)}>\n        <h4>{title}</h4>\n        {children}\n        {vehicles.map((v) => (\n          <div key={v.title}>\n            {icon(v)}\n            <h5 className={v.depreciation_waiver ? 'VehicleTitle' : 'VehicleTitle notApplicable'}>{v.title}</h5>\n          </div>\n        ))}\n      </div>\n      {anyFalse()}\n    </div>\n  )\n}\n\nexport default VehicleCoverageItem\n","import React, { useState, useContext } from 'react'\nimport classNames from 'classnames'\nimport { AppContext } from './App'\nimport { Shield, Warning } from './icons'\n\nconst AccidentWaiverItem = ({ children, title, name }) => {\n\n  const [modifyVisible, setModifyVisible] = useState(false)\n\nconst { vehicles } = useContext(AppContext)\n\n  const cls = classNames('CoverageItem VehicleCoverageItem', {\n    'Modifying': modifyVisible,\n  })\n\n  const icon = vehicle => {\n    if (vehicle.accident_waiver) {\n      return <span><Shield /></span>\n    } else {\n      return <span><Warning /></span>\n    }\n  }\n\n  const anyFalse = () => {\n    const any = vehicles.filter(v => !v.accident_waiver)\n    if (any.length > 0) {\n      return <small className=\"CoverageLevel\">Accident waivers are only available where drivers have no previous at-fault accidents.</small>\n    }\n    return null\n  }\n\n  return (\n    <div className={cls}>\n      <div onClick={() => setModifyVisible(!modifyVisible)}>\n        <h4>{title}</h4>\n        {children}\n        {vehicles.map((v) => (\n          <div key={v.title}>\n            {icon(v)}\n            <h5 className=\"VehicleTitle\">{v.title}</h5>\n          </div>\n        ))}\n      </div>\n      {anyFalse()}\n    </div>\n  )\n}\n\nexport default AccidentWaiverItem\n","import React, { useContext } from 'react'\nimport classNames from 'classnames'\nimport numeral from 'numeral'\nimport { AppContext } from './App'\n\nimport './radios.scss'\n\nconst RadioGroup = ({ name, choices = [], kind = 'number' }) => {\n\n  const { set, values } = useContext(AppContext)\n\n  const onChange = e => {\n    const val = e.target.value\n    set(name, val)\n  }\n\n  const compareVals = item => {\n    if (kind === 'number') {\n      return item === Number(values[name])\n    }\n    return item === values[name]\n  }\n\n  const cls = (index, str = 'LowChoice') => {\n    console.log(index)\n    return classNames({\n      'current': true,\n      [str]: str,\n    })\n  }\n\n  return (\n    <div className=\"RadioGroup\">\n      {choices.map((ch, i) => (\n        <label\n          htmlFor={name + i}\n          key={name + i}\n          className={cls(i, ch[2])}\n        >\n          <input\n            id={name + i}\n            name={name}\n            type=\"radio\"\n            onChange={onChange}\n            value={ch[0]}\n            checked={compareVals(ch[0])}\n          />\n          {ch[1]}\n        </label>\n      ))}\n    </div>\n  )\n}\n\nexport default RadioGroup\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport const formatValue = (value, kind) => {\n\n  let val = <strong>invalid</strong>\n\n  if (kind === 'currency' || kind === 'number') {\n    val = <strong className=\"currencyValue\">${numeral(value).format('0,0')}</strong>\n  }\n\n  return val\n}","import React, { useContext } from 'react'\nimport CoverageItem from './CoverageItem'\nimport BooleanCoverageItem from './BooleanCoverageItem'\nimport ChartCoverageItem from './ChartCoverageItem'\nimport DepreciationWaiverItem from './DepreciationWaiverItem'\nimport AccidentWaiverItem from './AccidentWaiverItem'\nimport RadioGroup from './RadioGroup'\nimport { AppContext } from './App'\nimport { formatValue } from './utils'\n\nimport './coverage.scss'\n\nconst CoverageList = () => {\n\n  const { values, choices } = useContext(AppContext)\n\n  return (\n    <div className=\"CoverageList clearfix\">\n      <div className=\"LeftList\">\n        <CoverageItem\n          title=\"Liability Limit\"\n          name=\"liability_limit\"\n          Highest=\"2000000\"\n          Mid=\"1000000\"\n        >\n          <p className=\"BriefDescription\">\n            If you are in an accident, your damages and medical care are covered\n            for up to {formatValue(values['liability_limit'], 'currency')}\n          </p>\n          <div className=\"Modify\">\n            <RadioGroup\n              name=\"liability_limit\"\n              choices={choices['liability_limit']}\n            />\n            <div className=\"HelpCopy\">\n              <small>\n                This protects you from lawsuits resulting from accidents causing\n                bodily injury or death to others or property damage.\n              </small>\n            </div>\n          </div>\n          <small className=\"CoverageLevel\">\n            Currently at Inova's recommended level of coverage\n          </small>\n        </CoverageItem>\n        <CoverageItem\n          title=\"Comprehensive Coverage\"\n          name=\"comprehensive_coverage\"\n          Highest=\"1000\"\n          Mid=\"500\"\n          Lowest=\"0\"\n        >\n          <p className=\"BriefDescription\">\n            {Number(values['comprehensive_coverage']) === 0 ? (\n              <span>\n                No coverage for damages to your vehicle not caused by a traffic\n                accident (e.g. theft, fire, vandalism).\n              </span>\n            ) : (\n              <span>\n                A deductible of{' '}\n                {formatValue(values['comprehensive_coverage'], 'currency')} for\n                damages to your vehicle not caused by a traffic accident (e.g.\n                theft, fire, vandalism).\n              </span>\n            )}\n          </p>\n          <div className=\"Modify\">\n            <RadioGroup\n              name=\"comprehensive_coverage\"\n              choices={choices['comprehensive_coverage']}\n            />\n            <div className=\"HelpCopy\">\n              <small>\n                Comprehensive coverage is the maximum amount you pay in the\n                event of an at-fault accident.\n              </small>\n            </div>\n          </div>\n          <small className=\"CoverageLevel\">\n            Lower than Inova's recommended level of coverage\n          </small>\n        </CoverageItem>\n        <CoverageItem\n          title=\"Collision Coverage\"\n          name=\"collision_coverage\"\n          Highest=\"1000\"\n          Mid=\"500\"\n          Lowest=\"0\"\n        >\n          <p className=\"BriefDescription\">\n            {Number(values['collision_coverage']) === 0 ? (\n              <span>\n                No coverage for your\n                vehicle in the event of an at-fault accident, single vehicle\n                accident, or hit and run.\n              </span>\n            ) : (\n              <span>\n                A deductible of{' '}\n                {formatValue(values['collision_coverage'], 'currency')} for your\n                vehicle in the event of an at-fault accident, single vehicle\n                accident, or hit and run.\n              </span>\n            )}\n          </p>\n          <div className=\"Modify\">\n            <RadioGroup\n              name=\"collision_coverage\"\n              choices={choices['collision_coverage']}\n            />\n            <div className=\"HelpCopy\">\n              <small>\n                Comprehensive coverage is the maximum amount you pay in the\n                event of an at-fault accident.\n              </small>\n            </div>\n          </div>\n          <small className=\"CoverageLevel\">\n            Lower than Inova's recommended level of coverage\n          </small>\n        </CoverageItem>\n        <BooleanCoverageItem\n          title=\"Transportation Replacement\"\n          name=\"transportation_replacement\"\n          Highest=\"true\"\n          Lowest=\"false\"\n        >\n          <p className=\"BriefDescription\">\n            {values['transportation_replacement'] === 'true' ? (\n              <span>\n                You will be covered for a replacement vehicle if an insurance\n                claim requires your vehicle to be out of service.\n              </span>\n            ) : (\n              <span>\n                No coverage for a replacement vehicle if an insurance claim\n                requires your vehicle to be out of service.\n              </span>\n            )}\n          </p>\n          <div className=\"Modify\">\n            <RadioGroup\n              name=\"transportation_replacement\"\n              kind=\"boolean\"\n              choices={choices['transportation_replacement']}\n            />\n          </div>\n          <small className=\"CoverageLevel\">\n            Lower than Inova's recommended level of coverage\n          </small>\n        </BooleanCoverageItem>\n      </div>\n      <div className=\"RightList\">\n        <BooleanCoverageItem\n          title=\"Damage to Non-owned Autos\"\n          name=\"non_owned_autos\"\n          Highest=\"true\"\n          Lowest=\"false\"\n        >\n          <p className=\"BriefDescription\">\n            {values['non_owned_autos']} on any rental vehicle in the Canada or\n            US.\n          </p>\n          <div className=\"Modify\">\n            <RadioGroup\n              name=\"non_owned_autos\"\n              kind=\"boolean\"\n              choices={choices['non_owned_autos']}\n            />\n          </div>\n          <small className=\"CoverageLevel\">\n            Lower than Inova's recommended level of coverage\n          </small>\n        </BooleanCoverageItem>\n        <DepreciationWaiverItem\n          title=\"Waiver of Depreciation\"\n          name=\"depreciation_waiver\"\n        >\n          <p className=\"BriefDescription\">\n            Ensures that in the event of an accident, you will be reimbursed for\n            the purchase price without any depreciation.\n          </p>\n        </DepreciationWaiverItem>\n        <AccidentWaiverItem title=\"Accident Waiver\" name=\"accident_waiver\">\n          <p className=\"BriefDescription\">\n            In the event of you being in an accident in which you are at fault,\n            it will protect your driving record and forgive the accident.\n          </p>\n        </AccidentWaiverItem>\n        <CoverageItem\n          title=\"Medical, Rehabilitation and Attendant Care (Catastrophic Injury)\"\n          name=\"medical_rehab_non\"\n          Mid=\"1000000\"\n          Highest=\"2000000\"\n        >\n          <p className=\"BriefDescription\">\n            Reimbursement for medical and rehabilitation costs up to{' '}\n            {formatValue(values['medical_rehab_non'], 'currency')} that are not\n            covered by OHIP.\n          </p>\n          <div className=\"Modify\">\n            <RadioGroup\n              name=\"medical_rehab_non\"\n              choices={choices['medical_rehab_non']}\n            />\n            <div className=\"HelpCopy\">\n              <small>\n                Attendant care is reimbursement for an attendant to care for you\n                if you are unable.\n              </small>\n            </div>\n          </div>\n          <small className=\"CoverageLevel\">\n            Currently at Inova's recommended level of coverage\n          </small>\n        </CoverageItem>\n        <ChartCoverageItem\n          title=\"Death and Funeral\"\n          name=\"death_funeral\"\n          choices={choices['death_funeral']}\n          Lowest=\"standard\"\n          Highest=\"increased\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CoverageList\n","import React, { useState, useContext } from 'react'\nimport { AppContext } from './App'\n\nconst LoadingButton = ({ label }) => {\n\n  const { setPricesChanged } = useContext(AppContext)\n\n  const [loading, setLoading] = useState(false)\n\n  const handleClick = () => {\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      setPricesChanged(false)\n    }, 3000)\n  }\n\n  return (\n    <button onClick={handleClick} className=\"LoadingButton\">\n      {label} {loading && <span className=\"spinner\"></span>}\n    </button>\n  )\n}\n\nexport default LoadingButton","import React, { useContext } from 'react'\nimport LoadingButton from './LoadingButton'\nimport { AppContext } from './App'\n\nconst StickyHeader = () => {\n\n  const { pricesChanged } = useContext(AppContext)\n\n  return (\n    <div className=\"StickyHeader clearfix\">\n      {pricesChanged ? (\n        <div className=\"Requote\">\n          <p>\n            After changing coverage you can <LoadingButton label=\"Requote\" /> to\n            see updated pricing.\n          </p>\n        </div>\n      ) : (\n        <div>\n          <div className=\"left\">\n            <span className=\"Dollar\">$</span>\n            <span className=\"Price\">374</span>\n            <span className=\"Per\">PER MONTH</span>\n          </div>\n          <div className=\"right\">\n            <span className=\"Dollar\">$</span>\n            <span className=\"Price\">4488</span>\n            <span className=\"Per\">PER YEAR</span>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default StickyHeader\n","import React, { useState } from 'react'\nimport CoverageList from './CoverageList'\nimport StickyHeader from './StickyHeader'\nimport { Shield, Warning, Stop, Logo } from './icons'\n\nimport './custom.scss'\n\nexport const AppContext = React.createContext()\n\nconst App = () => {\n\n  const choices = {\n    liability_limit: [\n      [\n        1000000,\n        <span className=\"Choice MidChoice\">\n          $1,000,000 <Warning />\n        </span>,\n        'MidChoice',\n      ],\n      [\n        2000000,\n        <span className=\"Choice HighChoice\">\n          $2,000,000 <Shield />\n        </span>,\n        'HighChoice',\n      ],\n    ],\n    comprehensive_coverage: [\n      [0, <span className=\"Choice LowChoice\">No coverage</span>, 'LowChoice'],\n      [\n        500,\n        <span className=\"Choice MidChoice\">\n          $500 <Warning />\n        </span>,\n        'MidChoice',\n      ],\n      [\n        1000,\n        <span className=\"Choice HighChoice\">\n          $1000 <Shield />\n        </span>,\n        'HighChoice',\n      ],\n    ],\n    collision_coverage: [\n      [0, <span className=\"Choice LowChoice\">No coverage</span>, 'LowChoice'],\n      [\n        500,\n        <span className=\"Choice MidChoice\">\n          $500 <Warning />\n        </span>,\n        'MidChoice',\n      ],\n      [\n        1000,\n        <span className=\"Choice HighChoice\">\n          $1000 <Shield />\n        </span>,\n        'HighChoice',\n      ],\n    ],\n    transportation_replacement: [\n      [\n        'false',\n        <span className=\"Choice LowChoice\">No coverage</span>,\n        'MidChoice',\n      ],\n      [\n        'true',\n        <span className=\"Choice LowChoice\">\n          You will be covered <Shield />\n        </span>,\n        'HighChoice',\n      ],\n    ],\n    non_owned_autos: [\n      [\n        'false',\n        <span className=\"Choice MidChoice\">No coverage</span>,\n        'MidChoice',\n      ],\n      [\n        'true',\n        <span className=\"Choice HighChoice\">\n          You will be covered <Shield />\n        </span>,\n        'HighChoice',\n      ],\n    ],\n    medical_rehab_non: [\n      [\n        1000000,\n        <span className=\"Choice MidChoice\">\n          $1,000,000\n        </span>,\n        'MidChoice',\n      ],\n      [\n        2000000,\n        <span className=\"Choice HighChoice\">\n          $2,000,000 <Shield />\n        </span>,\n        'HighChoice',\n      ],\n    ],\n    death_funeral: [\n      ['standard', 'Standard'],\n      ['increased', 'Increased'],\n    ],\n  }\n\n  const vehicles = [\n    { title: '2018 HONDA RIDGELINE LX', depreciation_waiver: false, accident_waiver: true },\n    { title: '2020 FORD FOCUS SE', depreciation_waiver: true, accident_waiver: true },\n    { title: '2017 CHEVROLET COLORADO LT', depreciation_waiver: false, accident_waiver: true },\n    { title: '2020 GMC ACADIA SLT', depreciation_waiver: true, accident_waiver: true },\n  ]\n\n  const [pricesChanged, setPricesChanged] = useState(false)\n\n  const [values, setValues] = useState({\n    liability_limit: 2000000,\n    comprehensive_coverage: 500,\n    collision_coverage: 500,\n    transportation_replacement: 'true',\n    non_owned_autos: 'true',\n    medical_rehab_non: 1000000,\n    death_funeral: 'standard',\n  })\n\n  const set = (name, value) => {\n    setPricesChanged(true)\n    setValues(prevState => {\n      let current = Object.assign({}, prevState)\n      current[name] = value\n      return current\n    })\n  }\n\n  console.log(\n    'v: ',\n    values['comprehensive_coverage'],\n    typeof values['comprehensive_coverage'],\n  )\n\n  return (\n    <AppContext.Provider value={{ values, set, vehicles, choices, pricesChanged, setPricesChanged }}>\n      <div className=\"App\">\n        <StickyHeader />\n        <div>\n          <p className=\"lead Intro\">Customize your coverage, look out for the <Logo /> <strong>recommended coverage</strong> <Shield /> as you make your choices!</p>\n        </div>\n        <CoverageList />\n      </div>\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}